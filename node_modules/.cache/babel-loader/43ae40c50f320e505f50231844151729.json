{"ast":null,"code":"var _jsxFileName = \"/Users/lukemason/Desktop/Folders/SoftwareResearch/wire2wire/client/src/components/Friends/AddFriends.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { getUsers } from \"../../actions/friends\";\nimport { DataGrid } from '@material-ui/data-grid';\nimport { Button } from \"@material-ui/core\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst columns = [{\n  field: 'firstName',\n  headerName: 'First Name',\n  width: 130\n}, {\n  field: 'lastName',\n  headerName: 'Last Name',\n  width: 130\n}, {\n  field: 'state',\n  headerName: 'State',\n  width: 130\n}];\n\nconst AddFriends = () => {\n  _s();\n\n  const dispatch = useDispatch();\n  const users = useSelector(state => state.friends);\n  const currentUser = JSON.parse(localStorage.getItem('profile'));\n  const [newFriends, setNewFriends] = useState([]);\n  console.log(users);\n  console.log(\"New Friends\", newFriends);\n\n  const addFriends = () => {\n    console.log(\"Adding friends\");\n  };\n\n  const rows = [];\n  users.forEach(user => {\n    const id = user._id;\n    const firstName = user.public.firstName;\n    const lastName = user.public.lastName;\n    const state = user.public.state;\n\n    if (!state) {\n      const row = {\n        id: id,\n        firstName,\n        lastName,\n        state: \"NA\"\n      };\n      rows.push(row);\n    } else {\n      const row = {\n        id: id,\n        firstName,\n        lastName,\n        state\n      };\n      rows.push(row);\n    }\n  });\n  useEffect(() => {\n    dispatch(getUsers());\n  }, [dispatch]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      height: 400,\n      width: '100%'\n    },\n    children: [/*#__PURE__*/_jsxDEV(DataGrid, {\n      rows: rows,\n      columns: columns,\n      pageSize: 5,\n      checkboxSelection: true,\n      onSelectionModelChange: newSelection => {\n        setNewFriends(newSelection.selectionModel);\n      },\n      selectionModel: newFriends,\n      ...rows\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      color: \"primary\",\n      variant: \"contained\",\n      onClick: addFriends,\n      children: \"Add Friends\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 9\n  }, this);\n};\n\n_s(AddFriends, \"9kCwpeXmto/jSSfRIn9BTFDcP78=\", false, function () {\n  return [useDispatch, useSelector];\n});\n\n_c = AddFriends;\nexport default AddFriends;\n\nvar _c;\n\n$RefreshReg$(_c, \"AddFriends\");","map":{"version":3,"sources":["/Users/lukemason/Desktop/Folders/SoftwareResearch/wire2wire/client/src/components/Friends/AddFriends.js"],"names":["React","useEffect","useState","useDispatch","useSelector","getUsers","DataGrid","Button","columns","field","headerName","width","AddFriends","dispatch","users","state","friends","currentUser","JSON","parse","localStorage","getItem","newFriends","setNewFriends","console","log","addFriends","rows","forEach","user","id","_id","firstName","public","lastName","row","push","height","newSelection","selectionModel"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { getUsers } from \"../../actions/friends\";\nimport { DataGrid } from '@material-ui/data-grid';\nimport { Button } from \"@material-ui/core\";\n\nconst columns = [\n  { field: 'firstName', headerName: 'First Name', width: 130 },\n  { field: 'lastName', headerName: 'Last Name', width: 130 },\n  { field: 'state', headerName: 'State', width: 130 },\n];\n\nconst AddFriends = () => {\n    const dispatch = useDispatch();\n    const users = useSelector((state) => state.friends);\n    const currentUser = JSON.parse(localStorage.getItem('profile'));\n    const [newFriends, setNewFriends] = useState([]);\n    console.log(users);\n\n    console.log(\"New Friends\", newFriends);\n\n    const addFriends = () => {\n        console.log(\"Adding friends\");\n    }\n\n    const rows = []\n\n    users.forEach(user => {\n        const id = user._id;\n        const firstName = user.public.firstName;\n        const lastName = user.public.lastName;\n        const state = user.public.state;\n        if (!state) {\n            const row = { id: id, firstName, lastName, state:\"NA\" };\n            rows.push(row);\n        }\n        else {\n            const row = { id: id, firstName, lastName, state };\n            rows.push(row);\n        }  \n    });\n\n    useEffect(() => {\n        dispatch(getUsers())\n    }, [dispatch])\n    return (\n        <div style={{ height: 400, width: '100%' }}>\n            <DataGrid \n                rows={rows} \n                columns={columns} \n                pageSize={5} \n                checkboxSelection \n                onSelectionModelChange={(newSelection) => {\n                    setNewFriends(newSelection.selectionModel);\n                }}\n                selectionModel={newFriends}\n                    {...rows}\n            />\n            <Button color=\"primary\" variant=\"contained\" onClick={addFriends}>Add Friends</Button>\n        </div>\n    )\n}\n\nexport default AddFriends;"]},"metadata":{},"sourceType":"module"}