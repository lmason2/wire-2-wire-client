{"ast":null,"code":"var _jsxFileName = \"/Users/lukemason/Desktop/Folders/SoftwareResearch/wire2wire/client/src/components/FormComponents/CheckboxInfo.js\";\nimport React from \"react\";\nimport { FormGroup, FormControlLabel, Checkbox, FormLabel } from \"@material-ui/core\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst CheckBoxInfo = ({\n  userData,\n  setUserData\n}) => {\n  var _userData$result, _userData$result$publ, _userData$result$publ2, _userData$result2, _userData$result2$pub, _userData$result2$pub2, _userData$result3, _userData$result3$pub, _userData$result3$pub2, _userData$result4, _userData$result4$pub, _userData$result4$pub2, _userData$result5, _userData$result5$pub, _userData$result5$pub2, _userData$result6, _userData$result6$pub, _userData$result6$pub2;\n\n  return /*#__PURE__*/_jsxDEV(FormGroup, {\n    row: true,\n    children: [/*#__PURE__*/_jsxDEV(FormLabel, {\n      children: \"What types of runs do you like to do?\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(FormControlLabel, {\n      control: /*#__PURE__*/_jsxDEV(Checkbox, {\n        name: \"ez\",\n        onChange: e => setUserData({ ...userData,\n          result: { ...userData.result,\n            public: { ...userData.result.public,\n              typesOfRuns: { ...userData.result.public.typesOfRuns,\n                easy: e.target.checked\n              }\n            }\n          }\n        }),\n        value: userData === null || userData === void 0 ? void 0 : (_userData$result = userData.result) === null || _userData$result === void 0 ? void 0 : (_userData$result$publ = _userData$result.public) === null || _userData$result$publ === void 0 ? void 0 : (_userData$result$publ2 = _userData$result$publ.typesOfRuns) === null || _userData$result$publ2 === void 0 ? void 0 : _userData$result$publ2.easy\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 10,\n        columnNumber: 26\n      }, this),\n      label: \"Easy\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(FormControlLabel, {\n      control: /*#__PURE__*/_jsxDEV(Checkbox, {\n        name: \"wo\",\n        onChange: e => setUserData({ ...userData,\n          result: { ...userData.result,\n            public: { ...userData.result.public,\n              typesOfRuns: { ...userData.result.public.typesOfRuns,\n                workouts: e.target.checked\n              }\n            }\n          }\n        }),\n        value: userData === null || userData === void 0 ? void 0 : (_userData$result2 = userData.result) === null || _userData$result2 === void 0 ? void 0 : (_userData$result2$pub = _userData$result2.public) === null || _userData$result2$pub === void 0 ? void 0 : (_userData$result2$pub2 = _userData$result2$pub.typesOfRuns) === null || _userData$result2$pub2 === void 0 ? void 0 : _userData$result2$pub2.workouts\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 26\n      }, this),\n      label: \"Workouts\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(FormControlLabel, {\n      control: /*#__PURE__*/_jsxDEV(Checkbox, {\n        name: \"lr\",\n        onChange: e => setUserData({ ...userData,\n          result: { ...userData.result,\n            public: { ...userData.result.public,\n              typesOfRuns: { ...userData.result.public.typesOfRuns,\n                longRun: e.target.checked\n              }\n            }\n          }\n        }),\n        value: userData === null || userData === void 0 ? void 0 : (_userData$result3 = userData.result) === null || _userData$result3 === void 0 ? void 0 : (_userData$result3$pub = _userData$result3.public) === null || _userData$result3$pub === void 0 ? void 0 : (_userData$result3$pub2 = _userData$result3$pub.typesOfRuns) === null || _userData$result3$pub2 === void 0 ? void 0 : _userData$result3$pub2.longRun\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 26\n      }, this),\n      label: \"Long Runs\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(FormControlLabel, {\n      control: /*#__PURE__*/_jsxDEV(Checkbox, {\n        name: \"hill\",\n        onChange: e => setUserData({ ...userData,\n          result: { ...userData.result,\n            public: { ...userData.result.public,\n              typesOfRuns: { ...userData.result.public.typesOfRuns,\n                hills: e.target.checked\n              }\n            }\n          }\n        }),\n        value: userData === null || userData === void 0 ? void 0 : (_userData$result4 = userData.result) === null || _userData$result4 === void 0 ? void 0 : (_userData$result4$pub = _userData$result4.public) === null || _userData$result4$pub === void 0 ? void 0 : (_userData$result4$pub2 = _userData$result4$pub.typesOfRuns) === null || _userData$result4$pub2 === void 0 ? void 0 : _userData$result4$pub2.hills\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 26\n      }, this),\n      label: \"Hills\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(FormControlLabel, {\n      control: /*#__PURE__*/_jsxDEV(Checkbox, {\n        name: \"flat\",\n        onChange: e => setUserData({ ...userData,\n          result: { ...userData.result,\n            public: { ...userData.result.public,\n              typesOfRuns: { ...userData.result.public.typesOfRuns,\n                flat: e.target.checked\n              }\n            }\n          }\n        }),\n        value: userData === null || userData === void 0 ? void 0 : (_userData$result5 = userData.result) === null || _userData$result5 === void 0 ? void 0 : (_userData$result5$pub = _userData$result5.public) === null || _userData$result5$pub === void 0 ? void 0 : (_userData$result5$pub2 = _userData$result5$pub.typesOfRuns) === null || _userData$result5$pub2 === void 0 ? void 0 : _userData$result5$pub2.flat\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 26\n      }, this),\n      label: \"Flat\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(FormControlLabel, {\n      control: /*#__PURE__*/_jsxDEV(Checkbox, {\n        name: \"trails\",\n        onChange: e => setUserData({ ...userData,\n          result: { ...userData.result,\n            public: { ...userData.result.public,\n              typesOfRuns: { ...userData.result.public.typesOfRuns,\n                trails: e.target.checked\n              }\n            }\n          }\n        }),\n        value: userData === null || userData === void 0 ? void 0 : (_userData$result6 = userData.result) === null || _userData$result6 === void 0 ? void 0 : (_userData$result6$pub = _userData$result6.public) === null || _userData$result6$pub === void 0 ? void 0 : (_userData$result6$pub2 = _userData$result6$pub.typesOfRuns) === null || _userData$result6$pub2 === void 0 ? void 0 : _userData$result6$pub2.trails\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 26\n      }, this),\n      label: \"Trials\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 7,\n    columnNumber: 9\n  }, this);\n};\n\n_c = CheckBoxInfo;\nexport default CheckBoxInfo;\n\nvar _c;\n\n$RefreshReg$(_c, \"CheckBoxInfo\");","map":{"version":3,"sources":["/Users/lukemason/Desktop/Folders/SoftwareResearch/wire2wire/client/src/components/FormComponents/CheckboxInfo.js"],"names":["React","FormGroup","FormControlLabel","Checkbox","FormLabel","CheckBoxInfo","userData","setUserData","e","result","public","typesOfRuns","easy","target","checked","workouts","longRun","hills","flat","trails"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { FormGroup, FormControlLabel, Checkbox, FormLabel } from \"@material-ui/core\";\n\n\nconst CheckBoxInfo = ({ userData, setUserData }) => {\n    return (\n        <FormGroup row>\n        <FormLabel>What types of runs do you like to do?</FormLabel>\n            <FormControlLabel \n                control={<Checkbox \n                            name=\"ez\" \n                            onChange={(e) => setUserData({ ...userData, result: { ...userData.result, public: {...userData.result.public, typesOfRuns: {...userData.result.public.typesOfRuns, easy: e.target.checked}}}})}\n                            value={userData?.result?.public?.typesOfRuns?.easy}\n                        />} \n                label=\"Easy\" \n            />\n            <FormControlLabel \n                control={<Checkbox \n                            name=\"wo\" \n                            onChange={(e) => setUserData({ ...userData, result: { ...userData.result, public: {...userData.result.public, typesOfRuns: {...userData.result.public.typesOfRuns, workouts: e.target.checked}}}})}\n                            value={userData?.result?.public?.typesOfRuns?.workouts}\n                        />}\n                label=\"Workouts\" \n            />\n            <FormControlLabel \n                control={<Checkbox \n                            name=\"lr\" \n                            onChange={(e) => setUserData({ ...userData, result: { ...userData.result, public: {...userData.result.public, typesOfRuns: {...userData.result.public.typesOfRuns, longRun: e.target.checked}}}})}\n                            value={userData?.result?.public?.typesOfRuns?.longRun}\n                        />} \n                label=\"Long Runs\" \n            />\n            <FormControlLabel \n                control={<Checkbox \n                            name=\"hill\" \n                            onChange={(e) => setUserData({ ...userData, result: { ...userData.result, public: {...userData.result.public, typesOfRuns: {...userData.result.public.typesOfRuns, hills: e.target.checked}}}})}\n                            value={userData?.result?.public?.typesOfRuns?.hills}\n                        />} \n                label=\"Hills\" \n            />\n            <FormControlLabel \n                control={<Checkbox \n                            name=\"flat\" \n                            onChange={(e) => setUserData({ ...userData, result: { ...userData.result, public: {...userData.result.public, typesOfRuns: {...userData.result.public.typesOfRuns, flat: e.target.checked}}}})}\n                            value={userData?.result?.public?.typesOfRuns?.flat}\n                        />} \n                label=\"Flat\" \n            />\n            <FormControlLabel \n                control={<Checkbox \n                            name=\"trails\" \n                            onChange={(e) => setUserData({ ...userData, result: { ...userData.result, public: {...userData.result.public, typesOfRuns: {...userData.result.public.typesOfRuns, trails: e.target.checked}}}})}\n                            value={userData?.result?.public?.typesOfRuns?.trails}\n                        />} \n                label=\"Trials\" \n            />\n        </FormGroup>\n      );\n}\n\nexport default CheckBoxInfo;"]},"metadata":{},"sourceType":"module"}