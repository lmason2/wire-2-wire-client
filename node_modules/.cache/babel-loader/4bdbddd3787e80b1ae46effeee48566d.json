{"ast":null,"code":"import _objectSpread from\"/Users/lukemason/Desktop/Folders/SoftwareResearch/wire2wire/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _slicedToArray from\"/Users/lukemason/Desktop/Folders/SoftwareResearch/wire2wire/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useEffect,useState}from\"react\";import{useDispatch,useSelector}from\"react-redux\";import{getUsers,updateFriends}from\"../../actions/friends\";import{DataGrid}from'@material-ui/data-grid';import{Button}from\"@material-ui/core\";import{useHistory}from\"react-router-dom\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var columns=[{field:'firstName',headerName:'First Name',width:130},{field:'lastName',headerName:'Last Name',width:130},{field:'state',headerName:'State',width:130}];var AddFriends=function AddFriends(){var _currentUser$result,_currentUser$result$p;var dispatch=useDispatch();var users=useSelector(function(state){return state.friends;});var currentUser=JSON.parse(localStorage.getItem('profile'));var _useState=useState([]),_useState2=_slicedToArray(_useState,2),newFriends=_useState2[0],setNewFriends=_useState2[1];var currentFriends=currentUser===null||currentUser===void 0?void 0:(_currentUser$result=currentUser.result)===null||_currentUser$result===void 0?void 0:(_currentUser$result$p=_currentUser$result.public)===null||_currentUser$result$p===void 0?void 0:_currentUser$result$p.friends;var _useState3=useState(true),_useState4=_slicedToArray(_useState3,2),newFriendsIsEmpty=_useState4[0],setNewFriendsIsEmpty=_useState4[1];var history=useHistory();var addFriends=function addFriends(){if(currentFriends){currentFriends.forEach(function(friend){newFriends.push(friend);});}newFriends.push(currentUser.result._id);dispatch(updateFriends(newFriends));history.push(\"/\");};var rows=[];if(users){Array.from(users).forEach(function(user){var id=user._id;if((!currentFriends||!currentFriends.includes(id))&&id!==currentUser.result._id){var firstName=user.public.firstName;var lastName=user.public.lastName;var state=user.public.state;if(!state){var row={id:id,firstName:firstName,lastName:lastName,state:\"NA\"};rows.push(row);}else{var _row={id:id,firstName:firstName,lastName:lastName,state:state};rows.push(_row);}}});}useEffect(function(){dispatch(getUsers());},[dispatch]);return/*#__PURE__*/_jsxs(\"div\",{style:{height:400,width:'100%'},children:[/*#__PURE__*/_jsx(DataGrid,_objectSpread({rows:rows,columns:columns,pageSize:5,checkboxSelection:true,onSelectionModelChange:function onSelectionModelChange(newSelection){setNewFriends(newSelection.selectionModel);if(newSelection.selectionModel.length===0){setNewFriendsIsEmpty(true);}else{setNewFriendsIsEmpty(false);}},selectionModel:newFriends},rows)),/*#__PURE__*/_jsx(Button,{color:\"primary\",variant:\"contained\",onClick:addFriends,disabled:newFriendsIsEmpty,children:\"Add Friends\"})]});};export default AddFriends;","map":{"version":3,"sources":["/Users/lukemason/Desktop/Folders/SoftwareResearch/wire2wire/client/src/components/Friends/AddFriends.js"],"names":["React","useEffect","useState","useDispatch","useSelector","getUsers","updateFriends","DataGrid","Button","useHistory","columns","field","headerName","width","AddFriends","dispatch","users","state","friends","currentUser","JSON","parse","localStorage","getItem","newFriends","setNewFriends","currentFriends","result","public","newFriendsIsEmpty","setNewFriendsIsEmpty","history","addFriends","forEach","friend","push","_id","rows","Array","from","user","id","includes","firstName","lastName","row","height","newSelection","selectionModel","length"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { getUsers, updateFriends } from \"../../actions/friends\";\nimport { DataGrid } from '@material-ui/data-grid';\nimport { Button } from \"@material-ui/core\";\nimport { useHistory } from \"react-router-dom\";\n\nconst columns = [\n  { field: 'firstName', headerName: 'First Name', width: 130 },\n  { field: 'lastName', headerName: 'Last Name', width: 130 },\n  { field: 'state', headerName: 'State', width: 130 },\n];\n\nconst AddFriends = () => {\n    const dispatch = useDispatch();\n    const users = useSelector((state) => state.friends);\n    const currentUser = JSON.parse(localStorage.getItem('profile'));\n    const [newFriends, setNewFriends] = useState([]);\n    let currentFriends = currentUser?.result?.public?.friends;\n    const [newFriendsIsEmpty, setNewFriendsIsEmpty] = useState(true);\n    const history = useHistory();\n\n    const addFriends = () => {\n        if (currentFriends) {\n            currentFriends.forEach(friend => {\n                newFriends.push(friend);\n            })\n        }\n        newFriends.push(currentUser.result._id);\n        dispatch(updateFriends(newFriends));\n        history.push(\"/\");\n    }\n\n    const rows = []\n    if(users) {\n        Array.from(users).forEach(user => {\n            const id = user._id;\n            if ((!currentFriends || !currentFriends.includes(id)) && id !== currentUser.result._id ) {\n                const firstName = user.public.firstName;\n                const lastName = user.public.lastName;\n                const state = user.public.state;\n                if (!state) {\n                    const row = { id: id, firstName, lastName, state:\"NA\" };\n                    rows.push(row);\n                }\n                else {\n                    const row = { id: id, firstName, lastName, state };\n                    rows.push(row);\n                }  \n            }\n        });\n    }\n\n    useEffect(() => {\n        dispatch(getUsers())\n    }, [dispatch])\n\n    return (\n        <div style={{ height: 400, width: '100%' }}>\n            <DataGrid \n                rows={rows} \n                columns={columns} \n                pageSize={5} \n                checkboxSelection \n                onSelectionModelChange={(newSelection) => {\n                    setNewFriends(newSelection.selectionModel);\n                    if (newSelection.selectionModel.length === 0) {\n                        setNewFriendsIsEmpty(true);\n                    }\n                    else {\n                        setNewFriendsIsEmpty(false);\n                    }\n                }}\n                selectionModel={newFriends}\n                    {...rows}\n            />\n            <Button color=\"primary\" variant=\"contained\" onClick={addFriends} disabled={newFriendsIsEmpty}>Add Friends</Button>\n        </div>\n    )\n}\n\nexport default AddFriends;"]},"metadata":{},"sourceType":"module"}