{"ast":null,"code":"var _jsxFileName = \"/Users/lukemason/Desktop/Folders/SoftwareResearch/wire2wire/client/src/components/FormComponents/CheckboxInfo.js\";\nimport React from \"react\";\nimport { FormGroup, FormControlLabel, Checkbox, FormLabel } from \"@material-ui/core\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst CheckBoxInfo = ({\n  userData,\n  setUserData\n}) => {\n  var _userData$result, _userData$result$publ, _userData$result$publ2;\n\n  return /*#__PURE__*/_jsxDEV(FormGroup, {\n    row: true,\n    children: [/*#__PURE__*/_jsxDEV(FormLabel, {\n      children: \"What types of runs do you like to do?\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(FormControlLabel, {\n      control: /*#__PURE__*/_jsxDEV(Checkbox, {\n        name: \"ez\",\n        onChange: e => setUserData({ ...userData,\n          result: { ...userData.result,\n            public: { ...userData.result.public,\n              typesOfRuns: { ...userData.result.public.typesOfRuns,\n                easy: e.target.checked\n              }\n            }\n          }\n        }),\n        value: userData === null || userData === void 0 ? void 0 : (_userData$result = userData.result) === null || _userData$result === void 0 ? void 0 : (_userData$result$publ = _userData$result.public) === null || _userData$result$publ === void 0 ? void 0 : (_userData$result$publ2 = _userData$result$publ.typesOfRuns) === null || _userData$result$publ2 === void 0 ? void 0 : _userData$result$publ2.easy\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 10,\n        columnNumber: 26\n      }, this),\n      label: \"Easy\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(FormControlLabel, {\n      control: /*#__PURE__*/_jsxDEV(Checkbox, {\n        name: \"wo\",\n        onChange: e => setUserData({ ...userData,\n          result: { ...userData.result,\n            public: { ...userData.result.public,\n              typesOfRuns: { ...userData.result.public.typesOfRuns,\n                workouts: e.target.checked\n              }\n            }\n          }\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 40\n      }, this),\n      label: \"Workouts\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(FormControlLabel, {\n      control: /*#__PURE__*/_jsxDEV(Checkbox, {\n        name: \"lr\",\n        onChange: e => setUserData({ ...userData,\n          result: { ...userData.result,\n            public: { ...userData.result.public,\n              typesOfRuns: { ...userData.result.public.typesOfRuns,\n                longRun: e.target.checked\n              }\n            }\n          }\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 40\n      }, this),\n      label: \"Long Runs\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(FormControlLabel, {\n      control: /*#__PURE__*/_jsxDEV(Checkbox, {\n        name: \"hill\",\n        onChange: e => setUserData({ ...userData,\n          result: { ...userData.result,\n            public: { ...userData.result.public,\n              typesOfRuns: { ...userData.result.public.typesOfRuns,\n                hills: e.target.checked\n              }\n            }\n          }\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 40\n      }, this),\n      label: \"Hills\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(FormControlLabel, {\n      control: /*#__PURE__*/_jsxDEV(Checkbox, {\n        name: \"flat\",\n        onChange: e => setUserData({ ...userData,\n          result: { ...userData.result,\n            public: { ...userData.result.public,\n              typesOfRuns: { ...userData.result.public.typesOfRuns,\n                flat: e.target.checked\n              }\n            }\n          }\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 40\n      }, this),\n      label: \"Flat\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(FormControlLabel, {\n      control: /*#__PURE__*/_jsxDEV(Checkbox, {\n        name: \"trails\",\n        onChange: e => setUserData({ ...userData,\n          result: { ...userData.result,\n            public: { ...userData.result.public,\n              typesOfRuns: { ...userData.result.public.typesOfRuns,\n                trails: e.target.checked\n              }\n            }\n          }\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 40\n      }, this),\n      label: \"Trials\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 7,\n    columnNumber: 9\n  }, this);\n};\n\n_c = CheckBoxInfo;\nexport default CheckBoxInfo;\n\nvar _c;\n\n$RefreshReg$(_c, \"CheckBoxInfo\");","map":{"version":3,"sources":["/Users/lukemason/Desktop/Folders/SoftwareResearch/wire2wire/client/src/components/FormComponents/CheckboxInfo.js"],"names":["React","FormGroup","FormControlLabel","Checkbox","FormLabel","CheckBoxInfo","userData","setUserData","e","result","public","typesOfRuns","easy","target","checked","workouts","longRun","hills","flat","trails"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { FormGroup, FormControlLabel, Checkbox, FormLabel } from \"@material-ui/core\";\n\n\nconst CheckBoxInfo = ({ userData, setUserData }) => {\n    return (\n        <FormGroup row>\n        <FormLabel>What types of runs do you like to do?</FormLabel>\n            <FormControlLabel \n                control={<Checkbox \n                            name=\"ez\" \n                            onChange={(e) => setUserData({ ...userData, result: { ...userData.result, public: {...userData.result.public, typesOfRuns: {...userData.result.public.typesOfRuns, easy: e.target.checked}}}})}\n                            value={userData?.result?.public?.typesOfRuns?.easy}\n                        />} \n                label=\"Easy\" \n            />\n            <FormControlLabel control={<Checkbox name=\"wo\" onChange={(e) => setUserData({ ...userData, result: { ...userData.result, public: {...userData.result.public, typesOfRuns: {...userData.result.public.typesOfRuns, workouts: e.target.checked}}}})}/>} label=\"Workouts\" />\n            <FormControlLabel control={<Checkbox name=\"lr\" onChange={(e) => setUserData({ ...userData, result: { ...userData.result, public: {...userData.result.public, typesOfRuns: {...userData.result.public.typesOfRuns, longRun: e.target.checked}}}})}/>} label=\"Long Runs\" />\n            <FormControlLabel control={<Checkbox name=\"hill\" onChange={(e) => setUserData({ ...userData, result: { ...userData.result, public: {...userData.result.public, typesOfRuns: {...userData.result.public.typesOfRuns, hills: e.target.checked}}}})}/>} label=\"Hills\" />\n            <FormControlLabel control={<Checkbox name=\"flat\" onChange={(e) => setUserData({ ...userData, result: { ...userData.result, public: {...userData.result.public, typesOfRuns: {...userData.result.public.typesOfRuns, flat: e.target.checked}}}})}/>} label=\"Flat\" />\n            <FormControlLabel control={<Checkbox name=\"trails\" onChange={(e) => setUserData({ ...userData, result: { ...userData.result, public: {...userData.result.public, typesOfRuns: {...userData.result.public.typesOfRuns, trails: e.target.checked}}}})}/>} label=\"Trials\" />\n        </FormGroup>\n      );\n}\n\nexport default CheckBoxInfo;"]},"metadata":{},"sourceType":"module"}