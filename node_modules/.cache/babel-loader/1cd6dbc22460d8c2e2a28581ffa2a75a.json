{"ast":null,"code":"var _jsxFileName = \"/Users/lukemason/Desktop/Folders/SoftwareResearch/youtube/client/src/components/Form/Form.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { TextField, Button, Typography, Paper } from \"@material-ui/core\";\nimport FileBase from \"react-file-base64\";\nimport { useDispatch } from \"react-redux\";\nimport { useSelector } from \"react-redux\";\nimport useStyles from \"./styles\";\nimport { createPost } from \"../../actions/posts\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Form = ({\n  currentId,\n  setCurrentId\n}) => {\n  _s();\n\n  const post = useSelector(state => currentId ? state.posts.find(p => p._id === currentId) : null);\n  const [postData, setPostData] = useState({\n    creator: '',\n    title: '',\n    message: '',\n    tages: '',\n    selectedFile: ''\n  });\n  const classes = useStyles();\n  const dispatch = useDispatch();\n  useEffect(() => {\n    if (post) setPostData(post);\n  }, [post]);\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    dispatch(createPost(postData));\n  };\n\n  const clear = () => {\n    setCurrentId(null);\n    setPostData({\n      creator: '',\n      title: '',\n      message: '',\n      tags: '',\n      selectedFile: ''\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(Paper, {\n    className: classes.paper,\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      autoComplete: \"off\",\n      noValidate: true,\n      className: `${classes.root} ${classes.form}`,\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h6\",\n        children: [currentId ? \"Creating\" : \"Editing\", \" a Memory\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        name: \"creator\",\n        vairant: \"outlined\",\n        label: \"Creator\",\n        fullWidth: true,\n        value: postData.creator,\n        onChange: e => setPostData({ ...postData,\n          creator: e.target.value\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        name: \"title\",\n        vairant: \"outlined\",\n        label: \"Title\",\n        fullWidth: true,\n        value: postData.title,\n        onChange: e => setPostData({ ...postData,\n          title: e.target.value\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        name: \"message\",\n        vairant: \"outlined\",\n        label: \"Message\",\n        fullWidth: true,\n        value: postData.message,\n        onChange: e => setPostData({ ...postData,\n          message: e.target.value\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        name: \"tags\",\n        vairant: \"outlined\",\n        label: \"Tags\",\n        fullWidth: true,\n        value: postData.tags,\n        onChange: e => setPostData({ ...postData,\n          tags: e.target.value\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.fileInput,\n        children: /*#__PURE__*/_jsxDEV(FileBase, {\n          type: \"false\",\n          multiple: false,\n          onDone: ({\n            base64\n          }) => setPostData({ ...postData,\n            selectedFile: base64\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        className: classes.buttonSubmit,\n        variant: \"container\",\n        color: \"primary\",\n        size: \"large\",\n        type: \"submit\",\n        fullWidth: true,\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"contained\",\n        color: \"secondary\",\n        size: \"small\",\n        onClick: clear,\n        fullWidth: true,\n        children: \"Clear\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Form, \"plxyfpyGuenO3EZWN+I7twSkCPI=\", false, function () {\n  return [useSelector, useStyles, useDispatch];\n});\n\n_c = Form;\nexport default Form;\n\nvar _c;\n\n$RefreshReg$(_c, \"Form\");","map":{"version":3,"sources":["/Users/lukemason/Desktop/Folders/SoftwareResearch/youtube/client/src/components/Form/Form.js"],"names":["React","useState","useEffect","TextField","Button","Typography","Paper","FileBase","useDispatch","useSelector","useStyles","createPost","Form","currentId","setCurrentId","post","state","posts","find","p","_id","postData","setPostData","creator","title","message","tages","selectedFile","classes","dispatch","handleSubmit","e","preventDefault","clear","tags","paper","root","form","target","value","fileInput","base64","buttonSubmit"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport  { TextField, Button, Typography, Paper } from \"@material-ui/core\";\nimport FileBase from \"react-file-base64\";\nimport { useDispatch } from \"react-redux\";\nimport { useSelector } from \"react-redux\";\n\nimport useStyles from \"./styles\";\nimport { createPost } from \"../../actions/posts\"\n\nconst Form = ({ currentId, setCurrentId}) => {\n    const post = useSelector((state) => currentId ? state.posts.find((p) => p._id === currentId) : null);\n    const [postData, setPostData] = useState({\n        creator: '',\n        title: '',\n        message: '',\n        tages: '',\n        selectedFile: ''\n    });\n    const classes = useStyles();\n    const dispatch = useDispatch();\n\n    useEffect(() => {\n        if(post) setPostData(post);\n    }, [post])\n\n    const handleSubmit = (e) => {\n        e.preventDefault();\n\n        dispatch(createPost(postData));\n    }\n\n    const clear = () => {\n        setCurrentId(null);\n        setPostData({\n            creator: '',\n            title: '',\n            message: '',\n            tags: '',\n            selectedFile: ''\n        });\n    }\n\n    return (\n        <Paper className={classes.paper}>\n            <form autoComplete=\"off\" noValidate className={ `${classes.root} ${classes.form}` } onSubmit={handleSubmit}>\n                <Typography variant=\"h6\">{currentId ? \"Creating\" : \"Editing\"} a Memory</Typography>\n                <TextField \n                    name=\"creator\" \n                    vairant=\"outlined\" \n                    label=\"Creator\" \n                    fullWidth\n                    value={postData.creator}\n                    onChange={(e) => setPostData({ ...postData, creator: e.target.value })}\n                />\n                <TextField \n                    name=\"title\" \n                    vairant=\"outlined\" \n                    label=\"Title\" \n                    fullWidth\n                    value={postData.title}\n                    onChange={(e) => setPostData({ ...postData, title: e.target.value })}\n                />\n                <TextField \n                    name=\"message\" \n                    vairant=\"outlined\" \n                    label=\"Message\" \n                    fullWidth\n                    value={postData.message}\n                    onChange={(e) => setPostData({ ...postData, message: e.target.value })}\n                />\n                <TextField \n                    name=\"tags\" \n                    vairant=\"outlined\" \n                    label=\"Tags\" \n                    fullWidth\n                    value={postData.tags}\n                    onChange={(e) => setPostData({ ...postData, tags: e.target.value })}\n                />\n                <div className={classes.fileInput}>\n                    <FileBase \n                        type=\"false\"\n                        multiple={false}\n                        onDone={({base64}) => setPostData({ ...postData, selectedFile: base64 })}\n                    />\n                </div> \n                <Button className={classes.buttonSubmit} variant = \"container\" color=\"primary\" size=\"large\" type=\"submit\" fullWidth>Submit</Button>\n                <Button variant = \"contained\" color=\"secondary\" size=\"small\" onClick={clear} fullWidth>Clear</Button>\n            </form>\n        </Paper>\n    );\n}\n\nexport default Form;"]},"metadata":{},"sourceType":"module"}