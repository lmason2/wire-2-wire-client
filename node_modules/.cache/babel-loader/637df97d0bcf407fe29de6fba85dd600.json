{"ast":null,"code":"var _jsxFileName = \"/Users/lukemason/Desktop/Folders/SoftwareResearch/wire2wire/client/src/components/Form/Form.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { TextField, Button, Typography, Paper } from \"@material-ui/core\";\nimport FileBase from \"react-file-base64\";\nimport { useDispatch } from \"react-redux\";\nimport { useSelector } from \"react-redux\";\nimport Fab from '@material-ui/core/Fab';\nimport AddIcon from '@material-ui/icons/Add';\nimport useStyles from \"./styles\";\nimport { createPost, updatePost } from \"../../actions/posts\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Form = ({\n  currentId,\n  setCurrentId\n}) => {\n  _s();\n\n  var _user$result3;\n\n  const [currentAdd, setCurrentAdd] = useState(false);\n  const [postData, setPostData] = useState({\n    title: '',\n    message: '',\n    tags: '',\n    selectedFile: ''\n  });\n  const post = useSelector(state => currentId ? state.posts.find(message => message._id === currentId) : null);\n  const dispatch = useDispatch();\n  const classes = useStyles();\n  const user = JSON.parse(localStorage.getItem('profile'));\n  useEffect(() => {\n    if (post) setPostData(post);\n  }, [post]);\n\n  const clear = () => {\n    setCurrentId(0);\n    setPostData({\n      title: '',\n      message: '',\n      tags: '',\n      selectedFile: ''\n    });\n    setCurrentAdd(prevCurrentAdd => !prevCurrentAdd);\n  };\n\n  const addPost = () => {\n    setCurrentAdd(prevCurrentAdd => !prevCurrentAdd);\n  };\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n    console.log(currentId);\n\n    if (currentId === 0) {\n      var _user$result;\n\n      dispatch(createPost({ ...postData,\n        name: user === null || user === void 0 ? void 0 : (_user$result = user.result) === null || _user$result === void 0 ? void 0 : _user$result.name\n      }));\n      clear();\n    } else {\n      var _user$result2;\n\n      dispatch(updatePost(currentId, { ...postData,\n        name: user === null || user === void 0 ? void 0 : (_user$result2 = user.result) === null || _user$result2 === void 0 ? void 0 : _user$result2.name\n      }));\n      clear();\n    }\n  };\n\n  if (!(user === null || user === void 0 ? void 0 : (_user$result3 = user.result) === null || _user$result3 === void 0 ? void 0 : _user$result3.name)) {\n    return /*#__PURE__*/_jsxDEV(Paper, {\n      className: classes.paper,\n      children: /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h6\",\n        align: \"center\",\n        children: \"Please sign in to create your own post and like others' posts.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 9\n    }, this);\n  }\n\n  if (currentAdd) {\n    return /*#__PURE__*/_jsxDEV(Paper, {\n      className: classes.paper,\n      children: [/*#__PURE__*/_jsxDEV(Fab, {\n        color: \"primary\",\n        \"aria-label\": \"add\",\n        onClick: clear,\n        children: /*#__PURE__*/_jsxDEV(AddIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        autoComplete: \"off\",\n        noValidate: true,\n        className: `${classes.root} ${classes.form}`,\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          className: classes.cancel,\n          variant: \"outlined\",\n          color: \"secondary\",\n          size: \"small\",\n          onClick: clear,\n          children: \"X\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 19\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h6\",\n          children: [currentId ? \"Editing\" : \"Creating\", \" a Post\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 19\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          name: \"title\",\n          vairant: \"outlined\",\n          label: \"Title\",\n          fullWidth: true,\n          value: postData.title,\n          onChange: e => setPostData({ ...postData,\n            title: e.target.value\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 19\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          name: \"message\",\n          vairant: \"outlined\",\n          label: \"Message\",\n          fullWidth: true,\n          value: postData.message,\n          onChange: e => setPostData({ ...postData,\n            message: e.target.value\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 19\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          name: \"tags\",\n          vairant: \"outlined\",\n          label: \"Tags\",\n          fullWidth: true,\n          value: postData.tags,\n          onChange: e => setPostData({ ...postData,\n            tags: e.target.value.split(\",\")\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 19\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: classes.fileInput,\n          children: /*#__PURE__*/_jsxDEV(FileBase, {\n            type: \"false\",\n            multiple: false,\n            onDone: ({\n              base64\n            }) => setPostData({ ...postData,\n              selectedFile: base64\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 23\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 19\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          className: classes.buttonSubmit,\n          variant: \"contained\",\n          color: \"primary\",\n          size: \"large\",\n          type: \"submit\",\n          fullWidth: true,\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 19\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 15\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 9\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(Fab, {\n    color: \"primary\",\n    \"aria-label\": \"add\",\n    onClick: addPost,\n    children: /*#__PURE__*/_jsxDEV(AddIcon, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 104,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Form, \"52Xq2Hn6VCCi62UTMr17COF7Pdc=\", false, function () {\n  return [useSelector, useDispatch, useStyles];\n});\n\n_c = Form;\nexport default Form;\n\nvar _c;\n\n$RefreshReg$(_c, \"Form\");","map":{"version":3,"sources":["/Users/lukemason/Desktop/Folders/SoftwareResearch/wire2wire/client/src/components/Form/Form.js"],"names":["React","useState","useEffect","TextField","Button","Typography","Paper","FileBase","useDispatch","useSelector","Fab","AddIcon","useStyles","createPost","updatePost","Form","currentId","setCurrentId","currentAdd","setCurrentAdd","postData","setPostData","title","message","tags","selectedFile","post","state","posts","find","_id","dispatch","classes","user","JSON","parse","localStorage","getItem","clear","prevCurrentAdd","addPost","handleSubmit","e","preventDefault","console","log","name","result","paper","root","form","cancel","target","value","split","fileInput","base64","buttonSubmit"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport  { TextField, Button, Typography, Paper } from \"@material-ui/core\";\nimport FileBase from \"react-file-base64\";\nimport { useDispatch } from \"react-redux\";\nimport { useSelector } from \"react-redux\";\nimport Fab from '@material-ui/core/Fab';\nimport AddIcon from '@material-ui/icons/Add';\n\nimport useStyles from \"./styles\";\nimport { createPost, updatePost } from \"../../actions/posts\"\n\nconst Form = ({ currentId, setCurrentId}) => {\n    const [currentAdd, setCurrentAdd] = useState(false);\n    const [postData, setPostData] = useState({ title: '', message: '', tags: '', selectedFile: '' });\n    const post = useSelector((state) => (currentId ? state.posts.find((message) => message._id === currentId) : null));\n    const dispatch = useDispatch();\n    const classes = useStyles();\n    const user = JSON.parse(localStorage.getItem('profile'));\n  \n    useEffect(() => {\n      if (post) setPostData(post);\n    }, [post]);\n  \n    const clear = () => {\n      setCurrentId(0);\n      setPostData({ title: '', message: '', tags: '', selectedFile: '' });\n      setCurrentAdd((prevCurrentAdd) => !prevCurrentAdd);\n    };\n\n    const addPost = () => {\n      setCurrentAdd((prevCurrentAdd) => !prevCurrentAdd); \n    }\n  \n    const handleSubmit = async (e) => {\n      e.preventDefault();\n\n      console.log(currentId);\n  \n      if (currentId === 0) {\n        dispatch(createPost({ ...postData, name: user?.result?.name }));\n        clear();\n      } else {\n        dispatch(updatePost(currentId, { ...postData, name: user?.result?.name }));\n        clear();\n      }\n    };\n  \n    if (!user?.result?.name) {\n      return (\n        <Paper className={classes.paper}>\n          <Typography variant=\"h6\" align=\"center\">\n            Please sign in to create your own post and like others' posts.\n          </Typography>\n        </Paper>\n      );\n    }\n    \n    if (currentAdd) {\n      return (\n        <Paper className={classes.paper}>\n          <Fab color=\"primary\" aria-label=\"add\" onClick={clear}>\n              <AddIcon />\n          </Fab>\n              <form autoComplete=\"off\" noValidate className={ `${classes.root} ${classes.form}` } onSubmit={handleSubmit}>\n                  <Button className={classes.cancel} variant = \"outlined\" color=\"secondary\" size=\"small\" onClick={clear}>X</Button>\n                  <Typography variant=\"h6\">{currentId ? \"Editing\" : \"Creating\"} a Post</Typography>\n                  <TextField \n                      name=\"title\" \n                      vairant=\"outlined\" \n                      label=\"Title\" \n                      fullWidth\n                      value={postData.title}\n                      onChange={(e) => setPostData({ ...postData, title: e.target.value })}\n                  />\n                  <TextField \n                      name=\"message\" \n                      vairant=\"outlined\" \n                      label=\"Message\" \n                      fullWidth\n                      value={postData.message}\n                      onChange={(e) => setPostData({ ...postData, message: e.target.value })}\n                  />\n                  <TextField \n                      name=\"tags\" \n                      vairant=\"outlined\" \n                      label=\"Tags\" \n                      fullWidth\n                      value={postData.tags}\n                      onChange={(e) => setPostData({ ...postData, tags: e.target.value.split(\",\") })}\n                  />\n                  <div className={classes.fileInput}>\n                      <FileBase \n                          type=\"false\"\n                          multiple={false}\n                          onDone={({base64}) => setPostData({ ...postData, selectedFile: base64 })}\n                      />\n                  </div> \n                  <Button className={classes.buttonSubmit} variant = \"contained\" color=\"primary\" size=\"large\" type=\"submit\" fullWidth>Submit</Button>\n              </form>\n          </Paper>\n      );\n    }\n    return (\n        <Fab color=\"primary\" aria-label=\"add\" onClick={addPost}>\n            <AddIcon />\n        </Fab>\n    );\n}\n\nexport default Form;"]},"metadata":{},"sourceType":"module"}