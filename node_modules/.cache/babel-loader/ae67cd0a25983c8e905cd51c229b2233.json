{"ast":null,"code":"var _jsxFileName = \"/Users/lukemason/Desktop/Folders/SoftwareResearch/wire2wire/client/src/components/Friends/AddFriends.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { getUsers, updateFriends } from \"../../actions/friends\";\nimport { DataGrid } from '@material-ui/data-grid';\nimport { Button } from \"@material-ui/core\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst columns = [{\n  field: 'firstName',\n  headerName: 'First Name',\n  width: 130\n}, {\n  field: 'lastName',\n  headerName: 'Last Name',\n  width: 130\n}, {\n  field: 'state',\n  headerName: 'State',\n  width: 130\n}];\n\nconst AddFriends = () => {\n  _s();\n\n  var _currentUser$public;\n\n  const dispatch = useDispatch();\n  const users = useSelector(state => state.friends);\n  const currentUser = JSON.parse(localStorage.getItem('profile'));\n  const [newFriends, setNewFriends] = useState([]);\n  const currentFriends = currentUser === null || currentUser === void 0 ? void 0 : (_currentUser$public = currentUser.public) === null || _currentUser$public === void 0 ? void 0 : _currentUser$public.friends;\n  const [newFriendsIsEmpty, setNewFriendsIsEmpty] = useState(true);\n\n  const addFriends = () => {\n    if (currentFriends) {\n      currentFriends.forEach(friend => {\n        newFriends.push(friend);\n      });\n    }\n\n    newFriends.push(currentUser.result._id);\n    dispatch(updateFriends(newFriends));\n    router.push(\"/\");\n  };\n\n  const rows = [];\n  users.forEach(user => {\n    console.log(\"user\", user);\n    const id = user._id;\n\n    if (!currentFriends || !currentFriends.includes(id)) {\n      const firstName = user.public.firstName;\n      const lastName = user.public.lastName;\n      const state = user.public.state;\n\n      if (!state) {\n        const row = {\n          id: id,\n          firstName,\n          lastName,\n          state: \"NA\"\n        };\n        rows.push(row);\n      } else {\n        const row = {\n          id: id,\n          firstName,\n          lastName,\n          state\n        };\n        rows.push(row);\n      }\n    }\n  });\n  useEffect(() => {\n    dispatch(getUsers());\n  }, [dispatch]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      height: 400,\n      width: '100%'\n    },\n    children: [/*#__PURE__*/_jsxDEV(DataGrid, {\n      rows: rows,\n      columns: columns,\n      pageSize: 5,\n      checkboxSelection: true,\n      onSelectionModelChange: newSelection => {\n        setNewFriends(newSelection.selectionModel);\n\n        if (newSelection.selectionModel.length === 0) {\n          console.log(\"empty\");\n          setNewFriendsIsEmpty(true);\n        } else {\n          console.log(\"not empty\");\n          setNewFriendsIsEmpty(false);\n        }\n      },\n      selectionModel: newFriends,\n      ...rows\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      color: \"primary\",\n      variant: \"contained\",\n      onClick: addFriends,\n      disabled: newFriendsIsEmpty,\n      children: \"Add Friends\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 9\n  }, this);\n};\n\n_s(AddFriends, \"YR7pcr4wcDIF13XNd7/9Q/aPDVk=\", false, function () {\n  return [useDispatch, useSelector];\n});\n\n_c = AddFriends;\nexport default AddFriends;\n\nvar _c;\n\n$RefreshReg$(_c, \"AddFriends\");","map":{"version":3,"sources":["/Users/lukemason/Desktop/Folders/SoftwareResearch/wire2wire/client/src/components/Friends/AddFriends.js"],"names":["React","useEffect","useState","useDispatch","useSelector","getUsers","updateFriends","DataGrid","Button","columns","field","headerName","width","AddFriends","dispatch","users","state","friends","currentUser","JSON","parse","localStorage","getItem","newFriends","setNewFriends","currentFriends","public","newFriendsIsEmpty","setNewFriendsIsEmpty","addFriends","forEach","friend","push","result","_id","router","rows","user","console","log","id","includes","firstName","lastName","row","height","newSelection","selectionModel","length"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { getUsers, updateFriends } from \"../../actions/friends\";\nimport { DataGrid } from '@material-ui/data-grid';\nimport { Button } from \"@material-ui/core\";\n\nconst columns = [\n  { field: 'firstName', headerName: 'First Name', width: 130 },\n  { field: 'lastName', headerName: 'Last Name', width: 130 },\n  { field: 'state', headerName: 'State', width: 130 },\n];\n\nconst AddFriends = () => {\n    const dispatch = useDispatch();\n    const users = useSelector((state) => state.friends);\n    const currentUser = JSON.parse(localStorage.getItem('profile'));\n    const [newFriends, setNewFriends] = useState([]);\n    const currentFriends = currentUser?.public?.friends;\n    const [newFriendsIsEmpty, setNewFriendsIsEmpty] = useState(true);\n\n    const addFriends = () => {\n        if (currentFriends) {\n            currentFriends.forEach(friend => {\n                newFriends.push(friend);\n            })\n        }\n        newFriends.push(currentUser.result._id);\n        dispatch(updateFriends(newFriends));\n        router.push(\"/\");\n    }\n\n    const rows = []\n\n    users.forEach(user => {\n        console.log(\"user\", user);\n        const id = user._id;\n        if (!currentFriends || !currentFriends.includes(id)) {\n            const firstName = user.public.firstName;\n            const lastName = user.public.lastName;\n            const state = user.public.state;\n            if (!state) {\n                const row = { id: id, firstName, lastName, state:\"NA\" };\n                rows.push(row);\n            }\n            else {\n                const row = { id: id, firstName, lastName, state };\n                rows.push(row);\n            }  \n        }\n    });\n\n    useEffect(() => {\n        dispatch(getUsers())\n    }, [dispatch])\n\n    return (\n        <div style={{ height: 400, width: '100%' }}>\n            <DataGrid \n                rows={rows} \n                columns={columns} \n                pageSize={5} \n                checkboxSelection \n                onSelectionModelChange={(newSelection) => {\n                    setNewFriends(newSelection.selectionModel);\n                    if (newSelection.selectionModel.length === 0) {\n                        console.log(\"empty\");\n                        setNewFriendsIsEmpty(true);\n                    }\n                    else {\n                        console.log(\"not empty\");\n                        setNewFriendsIsEmpty(false);\n                    }\n                }}\n                selectionModel={newFriends}\n                    {...rows}\n            />\n            <Button color=\"primary\" variant=\"contained\" onClick={addFriends} disabled={newFriendsIsEmpty}>Add Friends</Button>\n        </div>\n    )\n}\n\nexport default AddFriends;"]},"metadata":{},"sourceType":"module"}