{"ast":null,"code":"import _toConsumableArray from\"/Users/lukemason/Desktop/Folders/SoftwareResearch/youtube/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";import{FETCH_ALL,CREATE,UPDATE,DELETE,LIKE}from\"../constants/actionTypes\";export default(function(){var posts=arguments.length>0&&arguments[0]!==undefined?arguments[0]:[];var action=arguments.length>1?arguments[1]:undefined;switch(action.type){case DELETE:return posts.filter(function(post){return post._id!=action.payload;});case LIKE:case UPDATE:return posts.map(function(post){return post._id===action.payload._id?action.payload:post;});case FETCH_ALL:return action.payload;case CREATE:return[].concat(_toConsumableArray(posts),[action.payload]);default:return posts;}});","map":{"version":3,"sources":["/Users/lukemason/Desktop/Folders/SoftwareResearch/youtube/client/src/reducers/posts.js"],"names":["FETCH_ALL","CREATE","UPDATE","DELETE","LIKE","posts","action","type","filter","post","_id","payload","map"],"mappings":"+LAAA,OAASA,SAAT,CAAoBC,MAApB,CAA4BC,MAA5B,CAAoCC,MAApC,CAA4CC,IAA5C,KAAwD,0BAAxD,CAEA,eAAe,UAAwB,IAAvBC,CAAAA,KAAuB,2DAAf,EAAe,IAAXC,CAAAA,MAAW,2CACnC,OAAQA,MAAM,CAACC,IAAf,EACI,IAAKJ,CAAAA,MAAL,CACI,MAAOE,CAAAA,KAAK,CAACG,MAAN,CAAa,SAACC,IAAD,QAAUA,CAAAA,IAAI,CAACC,GAAL,EAAYJ,MAAM,CAACK,OAA7B,EAAb,CAAP,CACJ,IAAKP,CAAAA,IAAL,CACA,IAAKF,CAAAA,MAAL,CACI,MAAOG,CAAAA,KAAK,CAACO,GAAN,CAAU,SAACH,IAAD,QAAUA,CAAAA,IAAI,CAACC,GAAL,GAAaJ,MAAM,CAACK,OAAP,CAAeD,GAA5B,CAAkCJ,MAAM,CAACK,OAAzC,CAAmDF,IAA7D,EAAV,CAAP,CACJ,IAAKT,CAAAA,SAAL,CACI,MAAOM,CAAAA,MAAM,CAACK,OAAd,CACJ,IAAKV,CAAAA,MAAL,CACI,mCAAWI,KAAX,GAAkBC,MAAM,CAACK,OAAzB,GACJ,QACI,MAAON,CAAAA,KAAP,CAXR,CAaH,CAdD","sourcesContent":["import { FETCH_ALL, CREATE, UPDATE, DELETE, LIKE } from \"../constants/actionTypes\";\n\nexport default (posts = [], action) => {\n    switch (action.type) {\n        case DELETE:\n            return posts.filter((post) => post._id != action.payload);\n        case LIKE:\n        case UPDATE:\n            return posts.map((post) => post._id === action.payload._id ? action.payload : post)\n        case FETCH_ALL:\n            return action.payload;\n        case CREATE:\n            return [...posts, action.payload];\n        default:\n            return posts;\n    }\n}"]},"metadata":{},"sourceType":"module"}