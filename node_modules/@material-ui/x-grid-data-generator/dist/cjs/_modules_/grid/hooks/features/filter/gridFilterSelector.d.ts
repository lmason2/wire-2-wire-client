import { GridFilterItem } from '../../../models/gridFilterItem';
import { GridRowModel } from '../../../models/gridRows';
import { GridState } from '../core/gridState';
import { FilterModelState } from './FilterModelState';
import { VisibleGridRowsState } from './visibleGridRowsState';
export declare const visibleGridRowsStateSelector: (state: GridState) => VisibleGridRowsState;
export declare const visibleSortedGridRowsSelector: import("reselect").OutputSelector<GridState, GridRowModel[], (res1: VisibleGridRowsState, res2: GridRowModel[]) => GridRowModel[]>;
export declare const visibleGridRowCountSelector: import("reselect").OutputSelector<GridState, number, (res1: VisibleGridRowsState, res2: number) => number>;
export declare const filterGridStateSelector: (state: GridState) => FilterModelState;
export declare const activeGridFilterItemsSelector: import("reselect").OutputSelector<GridState, GridFilterItem[], (res: FilterModelState) => GridFilterItem[]>;
export declare const filterGridItemsCounterSelector: import("reselect").OutputSelector<GridState, number, (res: GridFilterItem[]) => number>;
export declare type FilterColumnLookup = Record<string, GridFilterItem[]>;
export declare const filterGridColumnLookupSelector: import("reselect").OutputSelector<GridState, FilterColumnLookup, (res: GridFilterItem[]) => FilterColumnLookup>;
