import { GridRowId, GridRowModel } from '../../../models/gridRows';
import { GridSortDirection, GridSortModel } from '../../../models/gridSortModel';
import { GridState } from '../core/gridState';
import { GridRowsLookup } from '../rows/gridRowsSelector';
import { GridSortingState } from './gridSortingState';
export declare const sortedGridRowIdsSelector: import("reselect").OutputSelector<GridState, GridRowId[], (res: GridSortingState) => GridRowId[]>;
export declare const sortedGridRowsSelector: import("reselect").OutputSelector<GridState, GridRowModel[], (res1: GridRowId[], res2: GridRowsLookup, res3: GridRowModel[]) => GridRowModel[]>;
export declare const gridSortModelSelector: import("reselect").OutputSelector<GridState, GridSortModel, (res: GridSortingState) => GridSortModel>;
export declare type GridSortColumnLookup = Record<string, {
    sortDirection: GridSortDirection;
    sortIndex?: number;
}>;
export declare const gridSortColumnLookupSelector: import("reselect").OutputSelector<GridState, GridSortColumnLookup, (res: GridSortModel) => GridSortColumnLookup>;
